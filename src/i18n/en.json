{
    "header": {
        "skills": "Skills",
        "projects": "Projects",
        "trajectory": "Trajectory",
        "about_me": "About me",
        "contact": "Contact",
        "light_mode": "Light Mode",
        "dark_mode": "Dark Mode",
        "language_selector": "Language",
        "language_portuguese": "Portuguese",
        "language_english": "English",
        "language_spanish": "Spanish"
    },
    "hero_section": {
        "tagline": "Full Stack Developer",
        "subtitle": "Transforming ideas into robust and scalable digital solutions."
    },
    "about_page": {
        "profile_alt": "Tauan Ribeiro - Full Stack Developer",
        "title": "Tauan Ribeiro: Full Stack JavaScript Developer",
        "subtitle": "Practical Solutions and Continuous Growth",
        "paragraph1": "As a Full Stack JavaScript Developer with 5 years of experience, I am passionate about transforming complex ideas into scalable and high-performance web applications. My expertise spans the JavaScript ecosystem, with proficiency in Node.js, Express.js, React.js, and Next.js, and an intrinsic passion for problem-solving and creating efficient and elegant solutions.",
        "paragraph2": "My journey in the world of technology is marked by a successful transition from a decade of experience in Humanities, including a degree in Literature from USP, translation, editing, and teaching. This background has equipped me with a valuable skill set: meticulous attention to detail, essential for code quality and debugging; clear and effective communication, fundamental for team collaboration and understanding requirements; and sharp analytical thinking to unravel complex challenges. This trajectory demonstrates my remarkable capacity for continuous learning, adaptability, and resilience in the face of new horizons.",
        "paragraph3": "What motivates me most in software development is the endless possibilities that arise when starting to code, when creating a logic or a function. I love the freedom to explore diverse approaches and creative solutions for the same problem, always seeking the most optimized path. I am a great enthusiast of the development community and believe this is the strong point of our profession. I highly value how knowledge, solutions, and methods are shared openly and unrestricted, and how this dynamic drives the evolution of the community as a whole â€“ a philosophy I seek to replicate in any work environment.",
        "paragraph4": "My curiosity drives me to explore the frontiers of technology. I am an active user of Artificial Intelligence, which I consider a powerful multiplier of productivity and knowledge, and I seek to deepen my studies in AI and Machine Learning. Furthermore, I follow the Blockchain universe with great interest, recognizing its growing impact and transformative potential.",
        "paragraph5": "Currently based in Valencia, Spain, where I have resided since 2022 and work remotely for a Brazilian company, I am seeking an opportunity that allows me to grow and evolve long-term. I have high expectations for my career and aspire to an environment where I can contribute significantly to the success of the team and the company, while continuing to enhance my skills and expand my impact. I am a focused professional, dedicated to productivity and the relentless pursuit of continuous improvements."
    },
    "project_details": {
        "api_monitor": {
            "title": "API Monitor",
            "subtitle": "Ensuring API Reliability and Performance",
            "overview_title": "Overview and Key Features",
            "overview_text": "The API Monitor is an essential tool for developers and operations teams seeking to ensure the continuous health and performance of their APIs...",
            "features_title": "Key Features:",
            "feature_1": "Continuous Monitoring: Scheduled and automatic checks of API availability and response time.",
            "feature_2": "Customizable Alerts: Instant notifications via email or other channels when an API fails or exceeds performance thresholds.",
            "feature_3": "Performance History: Detailed graphs and logs for analyzing trends in uptime, latency, and errors over time.",
            "feature_4": "Flexible Configuration: Easily add, edit, and remove APIs for monitoring, defining check intervals and success/failure criteria.",
            "feature_5": "Real-time Updates: Interactive dashboard that instantly reflects API status, thanks to bidirectional communication.",
            "stack_title": "Technological Stack",
            "stack_text": "Despite a minimalist interface, the power of the API Monitor lies in its robust backend architecture and the efficiency of its technologies...",
            "frontend_title": "Frontend:",
            "backend_infra_title": "Backend & Infrastructure:",
            "architecture_title": "Architecture and Implementation Details",
            "architecture_text": "The API Monitor adopts a distributed and event-driven architecture, where the frontend and backend communicate via REST and WebSockets (Socket.IO)...",
            "flow_title": "Data Flow and Communication:",
            "flow_1": "The user configures an API for monitoring via the frontend.",
            "flow_2": "The backend registers the API in PostgreSQL (via Prisma) and adds a task to the BULL queue.",
            "flow_3": "Independent workers consume tasks from the BULL queue, making HTTP requests to external APIs, measuring response time and status.",
            "flow_4": "Results are sent back to the backend, which persists them in PostgreSQL and, in case of critical status changes, triggers events via Socket.IO to the frontend.",
            "flow_5": "The frontend receives these updates in real-time, keeping the dashboard always synchronized.",
            "flow_6": "If there is a failure or degradation, the backend sends alerts via Nodemailer.",
            "infra_deploy_title": "Infrastructure and Deploy:",
            "infra_deploy_text": "The application is containerized with Docker, ensuring portability and consistency across environments. Deployment is carried out on a VM in DigitalOcean, where Nginx acts as a reverse proxy...",
            "architecture_decisions_title": "Architectural Decisions: Nginx and Socket.IO",
            "architecture_decision_nginx": "Nginx: Was strategically implemented as a reverse proxy to optimize static frontend delivery, load balance to the Node.js backend, and manage SSL termination. Its robustness and efficiency freed the backend to focus exclusively on business logic, while providing an essential layer of security and performance for the application.",
            "architecture_decision_socketio": "Socket.IO: The choice of Socket.IO was fundamental to the API Monitor's value proposition, enabling real-time bidirectional communication. This allowed the dashboard to display API status instantly, eliminating the need for polling and ensuring a fluid and reactive user experience, with lower latency and optimized server resource usage.",
            "challenges_title": "Technical Challenges and Solutions/Learnings",
            "challenges_text": "The development of the API Monitor was an intensive learning journey, especially in building a robust and scalable architecture for monitoring.",
            "challenge_infra_devops_title": "Infrastructure and DevOps (VM, Docker, Nginx):",
            "challenge_infra_devops_text": "One of the biggest challenges and learnings was the complete infrastructure setup. From creating and managing a Virtual Machine (VM) on DigitalOcean, through containerizing the application with Docker, which ensured an isolated and consistent environment for all dependencies, to configuring Nginx as a reverse proxy. This process required deep dives into networking concepts, container orchestration, and server optimization, resulting in a robust and efficient deployment that not only simplified the process but also elevated the solution's robustness and scalability.",
            "challenge_realtime_comm_title": "Real-time Communication with Socket.IO:",
            "challenge_realtime_comm_text": "Implementing Socket.IO for real-time bidirectional communication was another major learning point. Mastering server and client configuration, and ensuring that API status updates were delivered instantly and reliably to the dashboard, was fundamental to the application's value proposition.",
            "challenge_queue_mgmt_title": "Queue Management with BULL and Redis:",
            "challenge_queue_mgmt_text": "To handle asynchronous scheduling and processing of API checks, integrating BULL (with Redis as backend) was crucial. This allowed for the creation of a resilient queue system, capable of processing a large volume of monitoring tasks without blocking the main server, ensuring that checks occur reliably and scalably.",
            "challenge_reliable_scheduling_title": "Reliable Scheduling and Monitoring Accuracy:",
            "challenge_reliable_scheduling_text": "Ensuring that API checks occur at exact intervals, even under load, required careful implementation of schedulers and workers, with retry mechanisms and failure handling. Configuring success criteria (HTTP status, response content) and implementing multiple attempts before declaring an API 'down' were crucial to avoid unnecessary alerts and ensure the accuracy of the reported status.",
            "challenge_historical_data_title": "Historical Data Visualization:",
            "challenge_historical_data_text": "Developing an efficient way to store and query large volumes of monitoring data to generate performance trend graphs was a significant learning in database optimization and data processing.",
            "view_project_online": "View Project Online",
            "repo_frontend": "Frontend Repository",
            "repo_backend": "Backend Repository"
        }
    }
}